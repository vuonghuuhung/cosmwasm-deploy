/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  admin?: string | null;
  ibc_bridge_wasm?: string | null;
}
export type ExecuteMsg = {
  receive: Cw20ReceiveMsg;
} | {
  update_config: {
    admin: string;
    ibc_bridge_wasm: string;
  };
} | {
  update_vault_info: {
    decimals: number;
    share_price: number;
    tvl: number;
    vault: string;
  };
} | {
  withdraw: {
    amount: number;
    vault: string;
  };
} | {
  add_allow_list_token: {
    token: string;
  };
} | {
  add_allow_list_vault: {
    vault: string;
  };
} | {
  fulfill_deposit_order: {
    amount: number;
    denom: string;
    share_receive: number;
    user: string;
    vault: string;
  };
} | {
  fulfill_withdraw_order: {
    amount: number;
    user: string;
    vault: string;
  };
};
export type Uint128 = string;
export type Binary = string;
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export type QueryMsg = {
  config: {};
} | {
  vault_info: {
    vault: string;
  };
} | {
  deposit_info: {
    address: string;
    vault: string;
  };
} | {
  withdraw_info: {
    address: string;
    vault: string;
  };
} | {
  share_balance: {
    address: string;
    vault: string;
  };
} | {
  allow_list_token: {
    token: string;
  };
} | {
  allow_list_vault: {
    vault: string;
  };
} | {
  all_allow_list_token: {};
} | {
  all_allow_list_vault: {};
};
export type ArrayOfAllowListTokenResponse = AllowListTokenResponse[];
export interface AllowListTokenResponse {
  is_allow: boolean;
  token: string;
}
export type ArrayOfAllowListVaultResponse = AllowListVaultResponse[];
export interface AllowListVaultResponse {
  is_allow: boolean;
  vault: string;
}
export type Addr = string;
export interface ConfigResponse {
  admin: Addr;
}
export interface DepositInfoResponse {
  amount: Uint128;
  denom: string;
  is_deposit: boolean;
  vault: string;
}
export interface ShareBalanceResponse {
  amount: Uint128;
}
export interface VaultInfoResponse {
  decimals: number;
  share_price: Uint128;
  tvl: Uint128;
}
export interface WithdrawInfoResponse {
  amount: Uint128;
  is_withdraw: boolean;
  vault: string;
}